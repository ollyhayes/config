# set prefix to escape (caps-lock) + space bar
set-option -g prefix M-Space

#set-option -g visual-bell on

# needed for 256 colours
set -g default-terminal "screen-256color"

# allow mouse scrolling
set -g mouse on

# start numbering panes at one so you don't have to reach accross the keyboard
set -g base-index 1

# allows us to nest tmux sessions - a sends command though to inner tmux
bind-key a send-prefix

# colour status bar
set -g status-bg colour98

status_colour="#[fg=black,bg=#{?client_prefix,colour202,colour98}]"
inverted_status_colour="#[fg=#{?client_prefix,colour202,colour98},bg=black]"
fixed_status_colour="#[fg=black,bg=colour98]"

setw -g status-left "${status_colour}[#S]${fixed_status_colour} "
setw -g window-status-current-format "${inverted_status_colour}[#I:#W]"
setw -g window-status-format "${status_colour}[#I:#W]"
set -g status-right "${status_colour}#{=21:pane_title} %H:%M %d-%b-%y"

##### attempting to get the whole status bar coloured
## this one using tmux 2.9 status-format (can't get the gap to work though)
#col="#[bg=${prefix_colour}]" # lost prefix_colour, but it can be found in the above
#set -g status-format[0] "${col}#[align=left range=left #{status-left-style}]${col}#{T;=/#{status-left-length}:status-left}${col}#[norange default]${col}#[list=on align=#{status-justify}]${col}#[list=left-marker]${col}<#[list=right-marker]>${col}#[list=on]${col}#{W:#[range=window|#{window_index} #{window-status-style}#{?#{&&:#{window_last_flag},#{!=:#{window-status-last-style},default}}, #{window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{window-status-bell-style},default}}, #{window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}}]#{T:window-status-format}#[norange default]#{?window_end_flag,,#{window-status-separator}},#[range=window|#{window_index} list=focus #{?#{!=:#{window-status-current-style},default},#{window-status-current-style},#{window-status-style}}#{?#{&&:#{window_last_flag},#{!=:#{window-status-last-style},default}}, #{window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{window-status-bell-style},default}}, #{window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}}]${col}#{T:window-status-current-format}${col}#[norange list=on default]${col}#{?window_end_flag,,${col}#{window-status-separator}${col}}}${col}#[nolist align=right range=right #{status-right-style}]${col}#{T;=/#{status-right-length}:status-right}${col}#[norange default]"
# Variables

# status format
#setw -g window-status-format "${col}#I #W"
#setw -g window-status-current-format "${col}[#I #W]"
#setw -g status-style "#[bg=${sync_ind_colour}]"
#setw -g status-style "bg=${colour98}"
#setw -g status-left "#[bg=${sync_ind_colour}][#S]                                                                                                                                                                                        "
#setw -g status-right "#[bg=${sync_ind_colour}][#S]"
#setw -g status-justify right
#setw -g status-left-length 150
#setw -g status-right-length 999
#setw -g window-status-format "#[bg=${sync_ind_colour}][#I #W]"
#setw -g window-status-current-format "#[bg=${sync_ind_colour}][#I #W]"
#####

# vim mode
set -g status-keys vi
setw -g mode-keys vi

bind-key R source-file ~/.tmux.conf
# ; goes to last-pane
# bind-key
bind-key o last-pane
bind-key h select-pane -L
bind-key n select-pane -D
bind-key e select-pane -U
bind-key i select-pane -R

# More Vim-like quit.
bind-key q confirm-before -p "Quit pane #P? (y/n)" kill-pane

# Resize panes with arrows.
bind-key Left resize-pane -L 10
bind-key Down resize-pane -D 10
bind-key Up resize-pane -U 10
bind-key Right resize-pane -R 10

# Split panes.
bind-key S split-window -fc '#{pane_current_path}'
bind-key s split-window -c '#{pane_current_path}'
bind-key V split-window -fhc '#{pane_current_path}'
bind-key v split-window -hc '#{pane_current_path}'

# m for multikeys
bind-key m setw synchronize-panes

# More Vim-like
bind-key Space copy-mode
bind-key -T copy-mode-vi c-b send -X rectangle-toggle
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
bind-key -T copy-mode-vi Y send -X copy-selection \; send -X clear-selection
bind-key -T copy-mode-vi p send -X copy-selection-and-cancel \; paste-buffer
bind-key -T copy-mode-vi P send -X copy-selection \; paste-buffer \; send -X clear-selection
#bind-key -T copy-mode-vi p send -X append-selection \; paste-buffer
#bind-key -T copy-mode-vi P send -X append-selection-and-cancel \; paste-buffer

# Colemak Keys
bind-key -T copy-mode-vi n send -X cursor-down
bind-key -T copy-mode-vi e send -X cursor-up
bind-key -T copy-mode-vi N send -X cursor-down \; send -X cursor-down \; send -X cursor-down \; send -X cursor-down
bind-key -T copy-mode-vi E send -X cursor-up \; send -X cursor-up \; send -X cursor-up \; send -X cursor-up
bind-key -T copy-mode-vi i send -X cursor-right
bind-key -T copy-mode-vi I send -X end-of-line
bind-key -T copy-mode-vi H send -X back-to-indentation
bind-key -T copy-mode-vi k send -X search-again
bind-key -T copy-mode-vi K send -X search-reverse
bind-key -T copy-mode-vi j send -X next-word-end
bind-key -T copy-mode-vi J send -X next-space-end
bind-key -T copy-mode-vi c-n send -X bottom-line
bind-key -T copy-mode-vi c-m send -X middle-line
bind-key -T copy-mode-vi c-e send -X top-line

if-shell -b "$(which xclip)" \
	'bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -sel clipboard"'

if-shell -b "$(which clip.exe)" \
	'bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "tee /tmp/yank.txt && clip.exe < /tmp/yank.txt"'
	# no idea why we can't pipe directly to clip.exe. hexdump shows it's exactly the same stuff going into clip.exe stdin

#bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
bind-key -n MouseDown2Pane run "tmux paste-buffer"

#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'Morantron/tmux-fingers'
#run -b '~/.tmux/plugins/tpm/tpm'

#set -g @yank_selection_mouse 'clipboard'
